[
  {
    "header": "Welcome to Path-Visualize!",
    "subheader": "What is a pathfinding algorithms?",
    "content": "At its core, a pathfinding method searches a graph by starting at one vertex and exploring adjacent nodes until the destination node is reached, generally with the intent of finding the shortest route.\nThis application visualizes various pathfinding algorithms in action, and more!\nAll of the algorithms on this application are adapted for a 2D grid, where movements from a node to another have a \"cost\" of 1."
  },
  {
    "header": "Search for your favorite algorithm",
    "imgs": [
      "https://raw.githubusercontent.com/GabiCtrlZ/path-visualize/master/src/readme-pics/autocomplete.png",
      "https://raw.githubusercontent.com/GabiCtrlZ/path-visualize/master/src/readme-pics/search.png"
    ],
    "content": "Note that some algorithms are unweighted, while others are weighted. Unweighted algorithms do not take weight nodes into account, whereas weighted ones do. Additionally, not all algorithms guarantee the shortest path."
  },
  {
    "imgs": [
      "https://raw.githubusercontent.com/GabiCtrlZ/path-visualize/master/src/readme-pics/actions.png",
      "https://raw.githubusercontent.com/GabiCtrlZ/path-visualize/master/src/readme-pics/actions-examples.png"
    ],
    "header": "Build your own \"maze\" using various actions"
  },
  {
    "imgs": [
      "https://raw.githubusercontent.com/GabiCtrlZ/path-visualize/master/src/readme-pics/create-maze.png",
      "https://raw.githubusercontent.com/GabiCtrlZ/path-visualize/master/src/readme-pics/maze.png"
    ],
    "header": "Or use maze generating with recursive division"
  },
  {
    "header": ""
  }
]